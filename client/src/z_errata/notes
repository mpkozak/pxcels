

DONE---
    Colors
Grid
    Map
    Splash
    Toggles











Order of operations:

1   useParams (api fetch)
        width
        height
        colors
2   useSocket (establish connection)
        user
        username
3   useViewportScalar (determine size range of grid)
        scaleRange
4   useHIDDetect
        uiMode
        => 4a    useTouchZoomOverride



server says           client sends
req_uuid              res_uuid


client says           server sends
res_uuid              store_user
set_name              store_user
get_grid
set_cel






import React, {
  Fragment,
  createContext,
  memo,
  useContext,
  useRef,
  useMemo,
  useState,
  useReducer,
  useEffect,
  useLayoutEffect,
  useCallback,
} from 'react';
import { cl } from '../../libs';




Toolbar
  Toolbar--toolbox
    Tool--wrap
      Tool

12vh (min 90px)
  100% (min 90px)
    100% pad 10px









const colorInit = {
  palette: [],
  active: 6,
};

const colorReducer = (state, dispatch) => {
  const [msg, data] = dispatch;
  return { ...state, [msg]: data };
};

const useColor = () => {
  const [state, dispatch] = useReducer(colorReducer, colorInit);
  const {
    palette,
    active,
  } = state;


  console.log('use color ran')


  const setColor = useCallback(ind => {
    dispatch(['active', ind]);
  }, [dispatch]);


  const config = useCallback(src => {
    dispatch(['palette', src]);
  }, [dispatch]);


  console.log('use color returned', active)
  return {
    config,
    palette,
    activeColor: active,
    activeHex: palette[active],
    setColor,
  };
};







2 cels + 5px = 100%width - 20px


100w = 2cels + 25px

5   5  |  c   5   c  |  5   c   5   5
10     |      x      |  10  <|



100% = x + 20




15 + 2c = 100% - 10


2c = 100% - 25

c = 50% - 12.5


100% = 2c + 25


solve% = 60 + 3c


solve% = 60 + 3(50% - 12.5)


solve% = 60 + 150% - 37.5
solve% = 22.5 + 150%
solve% =
solve% =



90px = 2c + 5



100% = 2c + 5

.5( 100% - 5px ) = c


150% - 7.5px = 2c + 5

150% = 2c + 12.5


50% - 2.5px = c


3c + 30px = X
1.5( 100% - 5px ) + 30px = x
150% - 7.5px + 30px = x
150% + 22.5px = x



150% - 7.5px


9c + 60 = ???



100% =



100% = bigX + 20px;
bigX = 100% - 20px
bigX = 2c + 5px
bigX - 5px = 2c
0.5bigX - 2.5px = c
c = 0.5bigX + 2.5px


2c + 5px = bigX


bigX = 100% - 10px;






9c + 60 = solve?

9*(0.5bigX - 2.5px) + 60px
4.5bigX - 22.5px + 60px
4.5bigX + 37.5px = solve??



4.5(100% - 20px) + 37.5px = solve??
450% - 90px + 37.5px = solve??
-52.5


bigX = 100% - 20px


100% = bigX + 20px;





(90px - 20px) * .05 = 3.5px



(12vh - 20px) * .05 = ? + 3.5px

.6vh - 1px + 3.5px = ?
? = .6vh + 2.5px;








target = 3c+ 30

target = 157.5






















.canvas {
  backface-visibility: hidden;
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 5%;
  box-shadow: 0 0 1.25vmin .25vmin rgba(0, 0, 0, .3);
  opacity: 1;
  transform: translate(0)scale(1);
  transform-origin: 100% 100%;
  transition: transform 100ms ease-in, border-radius 20ms ease, opacity 20ms ease;
  pointer-events: auto;
  cursor: pointer;
}

.canvas:hover {
  opacity: .98;
  transform: translate(-.5%, -.5%)scale(1.02);
  transition: transform 40ms ease-out;
}

.canvas:active {
  opacity: .8;
  transform: translate(-1%,-1%)scale(1.01);
  transition: transform 40ms ease-out;
}

.canvas.large {
  border-radius: 0;
  transform: translate(-2%,-2%)scale(4);
  transition: transform 200ms ease-out, border-radius 1s;
}











.canv-wrap {
  position: fixed;
  left: 0%;
  top: 0%;
  width: 100%;
  height: 100%;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  z-index: 150;
  /*touch-action: pan-x, pan-y;*/
  overflow: auto;
  -ms-overflow-style: none;
}

.canv-wrap::-webkit-scrollbar {
  display: none;
}


.canv-flex {
  position: relative;
  max-width: 100%;
  max-height: 100%;
  display: flex;
  flex-flow: column nowrap;
  align-items: flex-start;
  justify-content: flex-start;
}








/*old iphones*/
@media only screen and (min-device-width: 375px) and (max-device-width: 667px) {

  .User__form-wrap {
    top: -10px;
    width: auto;
    height: auto;
    justify-content: flex-start;
    background-color: rgba(255,127,127,.5);
    background-color: red;
  }
}


/*new iphones*/
@media only screen and (min-device-width: 375px) and (max-device-width: 812px) {


}






@media only screen and (min-width: 670px) and (max-width: 1280px) {



}





@media only screen and (max-width: 680px) {

  .User__form-wrap {
    top: -10px;
    width: auto;
    height: auto;
    justify-content: flex-start;
    background-color: rgba(255,127,127,.5);
    background-color: blue;
  }

  .User__form-wrap--touch {
    left: -10px;
    top: 100%;
    width: 100vw;
    margin-left: 0;
    margin-top: 5px;
    /*padding-left: 5px;*/
    /*padding-right: 5px;*/
    padding: 5px;
  }




  .User__form {
    height: auto;
    margin-top: 10px;
    flex-flow: column nowrap;
    transform: translateY(0%);
  /*transition: transform 200ms ease-out, opacity 225ms ease-in;*/
    background-color: brown;
  }

  .User__form--touch {
    width: 100%;
    margin-left: 0;
    margin-top: 0;
    transform: translateX(0%);
  }

  .User__form--hide {
    transform: translateY(-100%);
  }

  .User__form--touch.User__form--hide {
    transform: translateX(-100%);
  }

  .User__form-input {
    padding: 6px;
    margin-right: 0;
    margin-bottom: 20px;
    font-size: 24px;
    user-select: auto;
  }


}



    /*width: calc(100% - 10px);*/

    /*padding-top: env(safe-area-inset-top);*/
    /*height: auto;*/
    /*background-color: orange;*/
    /*padding-left: env(safe-area-inset-left);*/
    /*padding-right: env(safe-area-inset-right);*/
    /*padding-top: env(safe-area-inset-top);*/
    /*padding-bottom: env(safe-area-inset-bottom);*/

/*
    flex-flow: column nowrap;

    border-radius: 0;
    border-bottom-left-radius: calc(.4vh + 2px);
    border-bottom-right-radius: calc(.4vh + 2px);
*/





.User__form {
  width: auto;
  /*height: 100%;*/
  padding: 20px;
  margin-left: 10px;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-between;

  /*background-color: #2a2e2f;*/
  /*background-color: rgba(26, 30, 31, .95);*/
  /*box-shadow: 0 0 1.25vmin .5vmin rgba(0, 0, 0, .3);*/

  /*background-color: rgba(127, 127, 127, .5);*/
  border-radius: calc(.4vh + 2px);
  transform: translateX(0%);
  opacity: 1;
  transition: transform 200ms ease-out, opacity 225ms ease-in;
  z-index: 400;
  cursor: default;
  pointer-events: auto;
}

.User__form--touch {
  margin-left: 5px;
}

.User__form--hide {
  transform: translateX(-100%);
  opacity: 0;
  transition: transform 250ms ease-in, opacity 200ms ease-out;
}



.User__form-input,
.User__form-button {
  /*margin: 10px;*/
  background-color: rgba(255, 255, 255, .9);
  -webkit-appearance: none;
  outline: none;
  border-radius: calc(.4vh + 2px);
  border: 2px solid rgba(127, 127, 127, .5);
  border: 2px solid rgba(26, 30, 31, .95);
}

.User__form-input {
  padding: 6px;
  margin-right: 20px;
  font-size: 24px;
  user-select: auto;
}

.User__form-button {
  padding: 6px 18px;
  font-size: 24px;
  white-space: nowrap;
  cursor: pointer;
}













/*

@media only screen and (max-width: 600px) {
  .User__form {
    width: 100%;
    height: auto;
    margin: 0;

    flex-flow: column nowrap;

    border-radius: 0;
    border-bottom-left-radius: calc(.4vh + 2px);
    border-bottom-right-radius: calc(.4vh + 2px);

    padding: 3vh 0;
  }
}



*/


/*
.User__blackout {
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: flex-start;
  background-color: rgba(0, 0, 0, .7);
  opacity: 0;
  transition: opacity 100ms ease-in-out;
  z-index: 300;
  cursor: alias;
  pointer-events: none;
}

.User__blackout--visible {
  opacity: 1;
  pointer-events: auto;
}
*/

/*
.Username form {
  width: 40vmin;
  height: 100%;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-around;
  pointer-events: auto;
  background-color: rgba(26, 30, 31, .95);
  border-radius: calc(.4vh + 2px);

}
*/

/*.Username form>input {
  width: 20vmin;
  padding: 1vmin;
  font-size: calc(1vh + 12px);
  user-select: auto;
}


.Username form>button {
  font-size: calc(1vh + 9px);
  padding: .5vmin;
  cursor: pointer;
  user-select: auto;
}


.Username h1 {
  padding: 2%;
  pointer-events: auto;
  color: rgba(26, 30, 31, .95);
  cursor: pointer;
}*/
